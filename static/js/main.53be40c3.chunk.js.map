{"version":3,"sources":["util/playNote.tsx","Header.tsx","util/toABC.tsx","common/noteConfig.tsx","consoleKeyEnter.tsx","common/keyCode.tsx","consoleMode.tsx","useReceiveKeyEnter.tsx","useWindowDimentions.tsx","pianoMode.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["audio","headerStyles","width","backgroundColor","color","fontFamily","fontSize","padding","Header","style","play","node","sec","ended","pause","currentTime","Hz","bytes","Uint8Array","Math","floor","header","fp","length","parseInt","substr","octave","phase","t","sin","setLittleEndian","str","i","String","fromCharCode","Audio","btoa","p","data","playNote","noteName","counter","toABC","beforeNote","afterNote","toLowerCase","repeat","noteLength","useConsoleKeyEnter","useState","noteStr","setNoteStr","setNoteABCStr","noteStrHist","setNoteStrHist","noteABCStrHist","setNoteABCStrHist","tmpNoteStr","tmpNoteABCStr","noteTypeArray","wait","Promise","resolve","reject","setTimeout","useEffect","setFromNone","event","a","keyCode","pointer","octaveCounter","oneNote","includes","console","log","prev","noteConfig","document","addEventListener","removeEventListener","consoleBase","height","paddingRight","paddingLeft","paddingTop","paddingBottom","overflowY","consoleOn","animationName","animationDuration","animationFillMode","consoleOut","ConsoleBlock","command","abc","commandId","scoreId","abcjs","renderAbc","id","ConsoleTab","inConsole","ConsoleMode","doRemove","nowString","commandHist","ABCHist","list","push","useReceiveKeyEnter","receivedKey","setReceivedKey","isSharp","setSharp","note","setNote","setCounter","nowCounter","setNowCounter","useWindowDimensions","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","onResize","keyStyles","border","keyStylesOn","blackKeyStyles","marginLeft","marginRight","zIndex","blackKeyStylesOn","keyLong","position","bottom","transformOrigin","keyShort","WhiteKey","nowplay","BlackKey","PianoBase","inPiano","keyNum","index","display","transform","marginBottom","boxShadow","PianoMode","noteList","setNoteList","tone","playStartIndex","playEndIndex","playable","addTone","prevNoteList","App","showConsole","setShowConsole","finShowConsole","setFinShowConsole","showPiano","setShowPiano","finShowPiano","setFinShowPiano","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53be40c3.chunk.js","sourcesContent":["import sleep from \"./sleep\";\n\n// 音を鳴らす関数\nconst bpm = 120\nconst duration = (60000 / bpm) / 2 * 20\n\nvar audio:any;\n\nfunction play(node:any,sec:any){\n    stop();\n    if(node>=96)return;\n\n    const Hz=11025;//サンプリングレート\n\n    //Waveデータ\n    var bytes=new Uint8Array(Math.floor(Hz*sec)+100);\n    //Waveヘッダー作成\n    var header=\"524946460000000057415645666D74201000000001000100112B0000112B0000010008006461746100000000\";\n    var fp = 0\n    while (fp < header.length/2){\n      bytes[fp]=parseInt(header.substr(fp*2,2),16);\n      fp += 1;\n    }\n\n    //音階(ドド#レ…シ)の周波数(1オクターブ下がると1/2倍)\n    var freqs=[4180, 4428, 4708, 4968, 5264, 5592, 5884, 6300, 6676, 6988, 7476, 7848];\n\n    //1サンプルあたりの位相計算\n    const octave = Math.floor(node/12); //オクターブ\n    const freq = freqs[node%12] / (1<<(7-octave)); //周波数\n    const phase = 6.28 / (Hz / freq);\n\n    //波形作成\n    for (let t = 0; t < Math.floor(Hz*sec); t++){\n        bytes[fp++] = Math.floor(Math.sin(phase*t)*127)+128;\n    }\n\n    //データ補正\n    setLittleEndian(bytes,4,fp-8);  //ファイルサイズ\n    setLittleEndian(bytes,24,Hz);   //サンプリングレート\n    setLittleEndian(bytes,40,fp-44);//波形サイズ\n\n    //BASE64変換してオーディオ作成\n    var str=\"\";\n    for (let i=0;i<fp;i++){str+=String.fromCharCode(bytes[i]);}\n    audio=new Audio(\"data:audio/wav;base64,\"+btoa(str));\n    audio.play();\n}\n\nfunction stop(){\n    if (audio&&!audio.ended){\n      audio.pause();audio.currentTime=0;\n    }\n}\nfunction setLittleEndian(bytes:any,p:any,data:any){\n    bytes[p] = (data & 0xFF);\n    bytes[p+1] = ((data >> 8) & 0xFF);\n    bytes[p+2] = ((data >> 16) & 0xFF);\n    bytes[p+3] = ((data >> 24) & 0xFF);\n}\n\n// どの音を鳴らすか\nfunction　playNote(noteName: string, counter: number, sec: number){\n    if (noteName === \"do\") {\n        play(48+counter*12, sec);\n    } else if (noteName == \"#do\") {\n        play(49+counter*12, sec);\n    } else if (noteName === \"re\") {\n        play(50+counter*12, sec);\n    } else if (noteName === \"#re\") {\n        play(51+counter*12, sec);\n    } else if (noteName === \"mi\") {\n        play(52+counter*12, sec);\n    } else if (noteName === \"fa\") {\n        play(53+counter*12, sec);\n    } else if (noteName === \"#fa\") {\n        play(54+counter*12, sec);\n    } else if (noteName === \"so\") {\n        play(55+counter*12, sec);\n    } else if (noteName === \"#so\") {\n        play(56+counter*12, sec);\n    } else if (noteName === \"ra\") {\n        play(57+counter*12, sec);\n    } else if (noteName === \"#ra\") {\n        play(58+counter*12, sec);\n    } else if (noteName === \"shi\") {\n        play(59+counter*12, sec);\n    }\n}\n\nexport default playNote;","import React from \"react\";\n\nconst headerStyles = {\n  width: \"100%\",\n  backgroundColor: \"#ADF7AE\",\n  color: \"#243324\",\n  fontFamily: \"Source Code Pro, monospace\",\n  fontSize: 22,\n  padding: 10,\n};\n\nconst Header: React.FC = () => {\n  return <div style={headerStyles}>TyPiano</div>;\n};\n\nexport default Header;\n","// 音をアルファベットに直す関数\nfunction toABC(beforeNote: string,counter:number) {\n  var afterNote = \"\";\n  if (beforeNote === \"do\") {\n    afterNote += \"C\";\n  } else if (beforeNote === \"#do\") {\n    afterNote += \"^C\"\n  } else if (beforeNote === \"re\") {\n    afterNote += \"D\";\n  } else if (beforeNote === \"#re\") {\n    afterNote += \"^D\";\n  } else if (beforeNote === \"mi\") {\n    afterNote += \"E\";\n  } else if (beforeNote === \"fa\") {\n    afterNote += \"F\";\n  } else if (beforeNote === \"#fa\") {\n    afterNote += \"^F\";\n  } else if (beforeNote === \"so\") {\n    afterNote += \"G\";\n  } else if (beforeNote === \"#so\") {\n    afterNote += \"^G\";\n  } else if (beforeNote === \"ra\") {\n    afterNote += \"A\";\n  } else if (beforeNote === \"#ra\") {\n    afterNote += \"^A\";\n  } else if (beforeNote === \"shi\") {\n    afterNote += \"B\";\n  } else if (beforeNote === \" \") {\n    afterNote += \"z\";\n  }\n  if (counter == 1){\n    afterNote = afterNote.toLowerCase();\n  } else if (counter > 1){\n    afterNote = afterNote.toLowerCase();\n    afterNote += \"\\'\".repeat(counter);\n  } else if (counter < 0){\n    afterNote += \",\".repeat(-counter);\n  }\n\n    return afterNote\n}\n\nexport default toABC;","export const bpm = 120;\nexport const duration = 60000 / bpm / 2;\n\n// 休みの長さ\nexport const restLength = 60/bpm/2;\n\n// 一音の長さ\nexport const noteLength = 60/bpm;","import React, { useState, useEffect } from \"react\";\nimport playNote from \"./util/playNote\";\nimport toABC from \"./util/toABC\";\nimport * as keyCodeList from \"./common/keyCode\";\nimport * as noteConfig from \"./common/noteConfig\"\n\nconst useConsoleKeyEnter = (): [string, string[], string[]] => {\n  // 今のドレミ\n  const [noteStr, setNoteStr] = useState<string>(\"\");\n  // 今のABC\n  const [noteABCStr, setNoteABCStr] = useState<string>(\"\");\n  // 今までのドレミを保持する配列\n  const [noteStrHist, setNoteStrHist] = useState<string[]>([]);\n  // 今までのABCを保持する配列\n  const [noteABCStrHist, setNoteABCStrHist] = useState<string[]>([]);\n\n  var tmpNoteStr = \"\";\n  var tmpNoteABCStr = \"\";\n  var noteTypeArray = [\"do\", \"re\", \"mi\", \"fa\", \"so\", \"ra\", \"shi\", \"#do\", \"#re\", \"#fa\", \"#so\", \"#ra\", \" \"];\n\n  const wait = (sec: any) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, sec * 1000);\n      //setTimeout(() => {reject(new Error(\"エラー！\"))}, sec*1000);\n    });\n  };\n\n  useEffect(() => {\n    async function setFromNone(event: { keyCode: number | Number }) {\n      const keyCode = event.keyCode;\n      if (keyCode === keyCodeList.enter_code) {\n        var pointer = 0;\n        var octaveCounter = 0;\n        while (pointer + 1 < tmpNoteStr.length) {\n          if (tmpNoteStr[pointer] === \",\") {\n            octaveCounter -= 1;\n            pointer += 1;\n            continue;\n          } else if (tmpNoteStr[pointer] === \".\") {\n            octaveCounter += 1;\n            pointer += 1;\n            continue;\n          }\n          var oneNote = tmpNoteStr.substr(pointer, 2);\n          if (oneNote === \"sh\" || oneNote[0] === \"#\") {\n            oneNote += tmpNoteStr[pointer + 2];\n            pointer += 3;\n          } else if (oneNote[0] === \" \") {\n            pointer += 1;\n            oneNote = \" \"\n          } else {\n            pointer += 2;\n          }\n          if (noteTypeArray.includes(oneNote)) {\n            console.log(octaveCounter)\n            tmpNoteABCStr += toABC(oneNote, octaveCounter);\n            octaveCounter = 0;\n            // setNoteABCStr(tmpNoteABCStr)\n          } else {\n            pointer -= 1\n          }\n        }\n        // ドレミとABCを配列に入れる\n        setNoteStrHist((prev) => [...prev, tmpNoteStr]);\n        setNoteABCStrHist((prev) => [...prev, tmpNoteABCStr]);\n\n        setNoteStr(\"\");\n        setNoteABCStr(\"\");\n\n        // 音鳴らすための処理\n        pointer = 0;\n        octaveCounter = 0;\n        while (pointer + 1 < tmpNoteStr.length) {\n        　if (tmpNoteStr[pointer] === \",\") {\n            octaveCounter -= 1;\n            pointer += 1;\n            continue;\n        　} else if (tmpNoteStr[pointer] === \".\") {\n            octaveCounter += 1;\n            pointer += 1;\n            continue;\n        　}\n          oneNote = tmpNoteStr.substr(pointer, 2);\n          if (oneNote === \"sh\" || oneNote[0] === \"#\") {\n              oneNote += tmpNoteStr[pointer + 2];\n              pointer += 3;\n          } else if (oneNote[0] === \" \") {\n              pointer += 1;\n              oneNote = \" \"\n            } else {\n              pointer += 2;\n          }\n          if (noteTypeArray.includes(oneNote)) {\n              if (oneNote === \" \") {\n                  await wait(noteConfig.restLength);\n              } else {\n                  playNote(oneNote,octaveCounter,noteConfig.noteLength)\n                  octaveCounter = 0;\n                  await wait(noteConfig.noteLength);\n              }\n          } else { // ミスタイプのとき\n              pointer -= 1\n          }\n        }\n        tmpNoteStr = \"\";\n        tmpNoteABCStr = \"\";\n      } else if (keyCode === keyCodeList.d_code) {\n        tmpNoteStr += \"d\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.r_code) {\n        tmpNoteStr += \"r\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.m_code) {\n        tmpNoteStr += \"m\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.f_code) {\n        tmpNoteStr += \"f\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.s_code) {\n        tmpNoteStr += \"s\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.h_code) {\n        tmpNoteStr += \"h\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.o_code) {\n        tmpNoteStr += \"o\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.e_code) {\n        tmpNoteStr += \"e\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.i_code) {\n        tmpNoteStr += \"i\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.a_code) {\n        tmpNoteStr += \"a\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.sharp_code) {\n        tmpNoteStr += \"#\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.upOctave_code) {\n        tmpNoteStr += \".\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.downOctave_code) {\n        tmpNoteStr += \",\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.space_code) {\n        tmpNoteStr += \" \";\n        setNoteStr(tmpNoteStr);\n      } else {\n        // setReceivedKey(\"none\");\n      }\n    }\n\n    document.addEventListener(\"keydown\", setFromNone);\n    return () => {\n      document.removeEventListener(\"keydown\", setFromNone);\n    };\n  }, [noteStrHist, noteABCStrHist]);\n\n  return [noteStr, noteStrHist, noteABCStrHist];\n};\n\nexport default useConsoleKeyEnter;\n","export const d_code = 68;\nexport const o_code = 79;\nexport const e_code = 69;\nexport const r_code = 82;\nexport const m_code = 77;\nexport const i_code = 73;\nexport const f_code = 70;\nexport const a_code = 65;\nexport const s_code = 83;\nexport const h_code = 72;\nexport const enter_code = 13;\nexport const sharp_code = 51;\nexport const upOctave_code = 190;\nexport const downOctave_code = 188;\nexport const space_code = 32;","import React, { ReactElement } from \"react\";\nimport abcjs from \"abcjs\";\nimport useConsoleKeyEnter from \"./consoleKeyEnter\";\nimport \"./slide.css\";\n\nconst consoleBase = {\n  backgroundColor: \"#041344\",\n  color: \"#FFFFFF\",\n  height: \"30px\",\n  paddingRight: 20,\n  paddingLeft: 20,\n  paddingTop: 10,\n  paddingBottom: 5,\n  overflowY: \"scroll\" as \"scroll\",\n};\n\nconst consoleOn = {\n  ...consoleBase,\n  animationName: \"slide-in\",\n  animationDuration: \"2s\",\n  animationFillMode: \"forwards\",\n};\n\nconst consoleOut = {\n  ...consoleBase,\n  animationName: \"slide-out\",\n  animationDuration: \"2s\",\n  animationFillMode: \"forwards\",\n};\n\nconst ConsoleBlock: React.FC<{ command: string; abc: string; i: number }> = ({\n  command,\n  abc,\n  i,\n}) => {\n  const commandId = \"command\" + String(i);\n  const scoreId = \"score\" + String(i);\n\n  abcjs.renderAbc(scoreId, abc);\n\n  return (\n    <div>\n      <p key={commandId}>$ {command}</p>\n      <div id={scoreId} key={scoreId}></div>\n    </div>\n  );\n};\n\nexport const ConsoleMode: React.FC<{ doRemove: boolean }> = ({ doRemove }) => {\n  // [[\"doremi\", \"remifa\"], [\"CDE\", \"EFG\"], \"dor\"のイメージ\n  const [nowString, commandHist, ABCHist] = useConsoleKeyEnter();\n\n  // 画面に表示するもの\n  const list: ReactElement[] = [];\n\n  // 今までの履歴をデザインに変えている\n  for (let i = 0; i < ABCHist.length; i++) {\n    // ConsoleBlockは、$doremiと五線譜のブロック\n    // commandは$doremiに使う\n    // abcは五線譜に使う\n    // iはidとかなので気にしなくていい\n    list.push(\n      <ConsoleBlock\n        command={commandHist[i]}\n        abc={ABCHist[i]}\n        i={i}\n      ></ConsoleBlock>\n    );\n  }\n  // 履歴と、一番下に今のやつを表示\n  return (\n    <div>\n      <div key=\"c\" style={doRemove ? consoleOut : consoleOn}>\n        {list}\n        <p>$ {nowString}</p>\n      </div>\n    </div>\n  );\n};\n\nexport const ConsoleTab: React.FC<{ inConsole: boolean }> = ({ inConsole }) => {\n  return <div style={consoleBase}>{!inConsole && \"コンソールモードへ\"}</div>;\n};\n\nexport default ConsoleMode;\n","import { useState, useEffect } from \"react\";\nimport playNote from \"./util/playNote\";\nimport * as keyCodeList from \"./common/keyCode\";\nimport * as noteConfig from \"./common/noteConfig\"\n\ntype nowGotted = \"d\" | \"r\" | \"m\" | \"f\" | \"s\" | \"sh\" | \"#d\" | \"#r\" | \"#f\" | \"#s\" | \"none\";\ntype note = \"do\" | \"re\" | \"mi\" | \"fa\" | \"so\" | \"ra\" | \"shi\" | \"#do\" | \"#re\" | \"#fa\" | \"#so\" | \"#ra\" | \"none\" ;\n\nconst useReceiveKeyEnter = (): [note,number] => {\n  const [receivedKey, setReceivedKey] = useState<nowGotted>(\"none\");\n  const [isSharp , setSharp] = useState(false);\n  const [note, setNote] = useState<note>(\"none\");\n  const [counter, setCounter] = useState<number>(0);\n  const [nowCounter, setNowCounter] = useState(0);\n\n  useEffect(() => {\n    function setFromNone(event: { keyCode: number | Number }) {\n      const keyCode = event.keyCode;\n      setNote(\"none\");\n      var oneNote = \"\"\n      if (keyCode == keyCodeList.sharp_code) {\n        setSharp(true);\n      } else if (keyCode == keyCodeList.downOctave_code) {\n        setCounter(counter-1);\n      } else if (keyCode == keyCodeList.upOctave_code) {\n        setCounter(counter+1)\n      } else if (keyCode === keyCodeList.d_code) {\n        if (isSharp) {\n          setReceivedKey(\"#d\");\n        } else{\n          setReceivedKey(\"d\");\n        }\n      } else if (keyCode === keyCodeList.r_code) {\n        if (isSharp) {\n          setReceivedKey(\"#r\");\n        } else{\n          setReceivedKey(\"r\");\n        }\n      } else if (keyCode === keyCodeList.m_code) {\n        setReceivedKey(\"m\");\n      } else if (keyCode === keyCodeList.f_code) {\n        if (isSharp){\n          setReceivedKey(\"#f\");\n        } else{\n          setReceivedKey(\"f\");\n        }\n      } else if (keyCode === keyCodeList.s_code) {\n        if (isSharp) {\n          setReceivedKey(\"#s\");\n        } else{\n          setReceivedKey(\"s\");\n        }\n      } else if (keyCode === keyCodeList.h_code && receivedKey === \"s\") {\n        setReceivedKey(\"sh\");\n      } else if (keyCode === keyCodeList.o_code && receivedKey === \"d\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#do\");\n          oneNote = \"#do\"\n          setSharp(false);\n        } else{\n          setNote(\"do\");\n          oneNote = \"do\"\n        }\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.o_code && receivedKey === \"s\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#so\");\n          oneNote = \"#so\"\n          setSharp(false);\n        } else{\n          setNote(\"so\");\n          oneNote = \"so\"\n        }\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.e_code && receivedKey === \"r\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#re\");\n          oneNote = \"#re\"\n          setSharp(false);\n        } else{\n          setNote(\"re\");\n          oneNote = \"re\"\n        }\n        playNote(oneNote, nowCounter, noteConfig.noteLength)\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.i_code && receivedKey === \"m\") {\n        setNowCounter(counter);\n        setCounter(0);\n        setSharp(false);\n        setNote(\"mi\");\n        oneNote = \"mi\"\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.i_code && receivedKey === \"sh\") {\n        setNowCounter(counter);\n        setCounter(0);\n        setSharp(false);\n        setNote(\"shi\");\n        oneNote = \"shi\"\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.a_code && receivedKey === \"f\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#fa\");\n          oneNote = \"#fa\"\n          setSharp(false);\n        } else{\n          setNote(\"fa\");\n          oneNote = \"fa\"\n        }\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else if (keyCode === keyCodeList.a_code && receivedKey === \"r\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#ra\");\n          oneNote = \"#ra\"\n          setSharp(false);\n        } else{\n          setNote(\"ra\");\n          oneNote = \"ra\"\n        }\n        playNote(oneNote,nowCounter, noteConfig.noteLength);\n        setReceivedKey(\"none\");\n      } else {\n        setReceivedKey(\"none\");\n        setCounter(0);\n      }\n    }\n\n    document.addEventListener(\"keydown\", setFromNone);\n    return () => {\n      document.removeEventListener(\"keydown\", setFromNone);\n    };\n  }, [receivedKey]);\n  return [note, nowCounter];\n};\n\nexport default useReceiveKeyEnter;\n","import { useState, useEffect } from \"react\";\n\nexport const useWindowDimensions = () => {\n  const getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  };\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  useEffect(() => {\n    const onResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n  return windowDimensions;\n};\n","import React, { useEffect, useState } from \"react\";\nimport useReceiveKeyEnter from \"./useReceiveKeyEnter\";\nimport { useWindowDimensions } from \"./useWindowDimentions\";\nimport abcjs from \"abcjs\";\nimport toABC from \"./util/toABC\";\nimport \"./slide.css\";\n\nconst keyStyles = {\n  height: 300,\n  width: 64,\n  backgroundColor: \"#F5FCFF\",\n  border: \"1px solid black\",\n};\n\nconst keyStylesOn = {\n  ...keyStyles,\n  backgroundColor: \"#adefde\",\n};\n\nconst blackKeyStyles = {\n  height: 150,\n  width: 32,\n  backgroundColor: \"black\",\n  border: \"1px solid black\",\n  marginLeft: -17,\n  marginRight: -17,\n  zIndex: 1,\n};\n\nconst blackKeyStylesOn = {\n  ...blackKeyStyles,\n  backgroundColor: \"#aaabcb\",\n};\n\nconst keyLong = {\n  position: \"fixed\" as \"fixed\",\n  bottom: 0,\n  transformOrigin: \"bottom\",\n  animationName: \"to-long\",\n  animationDuration: \"2s\",\n  animationFillMode: \"forwards\",\n};\n\nconst keyShort = {\n  position: \"fixed\" as \"fixed\",\n  bottom: 0,\n  transformOrigin: \"bottom\",\n  animationName: \"to-short\",\n  animationDuration: \"2s\",\n  animationFillMode: \"forwards\",\n};\n\nconst WhiteKey: React.FC<{ nowplay: boolean }> = ({ nowplay }) => {\n  return <div style={nowplay ? keyStylesOn : keyStyles}></div>;\n};\n\nconst BlackKey: React.FC<{ nowplay: boolean }> = ({ nowplay }) => {\n  return <div style={nowplay ? blackKeyStylesOn : blackKeyStyles}></div>;\n};\n\nconst PianoMode: React.FC<{ doRemove: boolean }> = ({ doRemove }) => {\n  const [noteList, setNoteList] = useState<string>(\"\");\n\n  const windowDimensions = useWindowDimensions();\n  const keyNum = windowDimensions.width / 64;\n  const [tone, counter] = useReceiveKeyEnter();\n\n  const list = [];\n\n  // どこから有効キーにするか\n  const playStartIndex = Math.floor(keyNum / 7 / 2) * 7;\n  // どこまで有効キーにするか\n  const playEndIndex = playStartIndex + 7;\n\n  //鍵盤作成\n  for (let index = 0; index < keyNum; index++) {\n    const playable = index >= playStartIndex && index < playEndIndex;\n    switch (index % 7) {\n      case 0:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"do\" : false}\n          />\n        );\n        list.push(\n          <BlackKey\n            key={index + 0.5}\n            nowplay={playable && !doRemove ? tone === \"#do\" : false}\n          />\n        );\n        break;\n      case 1:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"re\" : false}\n          />\n        );\n        list.push(\n          <BlackKey\n            key={index + 0.5}\n            nowplay={playable && !doRemove ? tone === \"#re\" : false}\n          />\n        );\n        break;\n      case 2:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"mi\" : false}\n          />\n        );\n        break;\n      case 3:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"fa\" : false}\n          />\n        );\n        list.push(\n          <BlackKey\n            key={index + 0.5}\n            nowplay={playable && !doRemove ? tone === \"#fa\" : false}\n          />\n        );\n        break;\n      case 4:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"so\" : false} />\n        );\n        list.push(\n          <BlackKey\n            key={index + 0.5}\n            nowplay={playable && !doRemove ? tone === \"#so\" : false}\n          />\n        );\n        break;\n      case 5:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"ra\" : false}\n          />\n        );\n        list.push(\n          <BlackKey\n            key={index + 0.5}\n            nowplay={playable && !doRemove ? tone === \"#ra\" : false}\n          />\n        );\n        break;\n      case 6:\n        list.push(\n          <WhiteKey\n            key={index}\n            nowplay={playable && !doRemove ? tone === \"shi\" : false}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    var addTone = toABC(tone, counter);\n\n    setNoteList((prevNoteList) => prevNoteList + addTone);\n  }, [tone]);\n  abcjs.renderAbc(\"abc\", noteList);\n\n  return (\n    <div style={doRemove ? keyShort : keyLong}>\n      <div id=\"abc\"></div>\n      <div style={{ display: \"flex\" }}>{list}</div>\n    </div>\n  );\n};\n\nexport const PianoBase: React.FC<{ inPiano: boolean }> = ({ inPiano }) => {\n  const windowDimensions = useWindowDimensions();\n  const keyNum = windowDimensions.width / 64;\n\n  const list = [];\n  for (let index = 0; index < keyNum; index++) {\n    switch (index % 7) {\n      case 0:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        list.push(<BlackKey key={index + 0.5} nowplay={false} />);\n        break;\n      case 1:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        list.push(<BlackKey key={index + 0.5} nowplay={false} />);\n        break;\n      case 2:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        break;\n      case 3:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        list.push(<BlackKey key={index + 0.5} nowplay={false} />);\n        break;\n      case 4:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        list.push(<BlackKey key={index + 0.5} nowplay={false} />);\n        break;\n      case 5:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        list.push(<BlackKey key={index + 0.5} nowplay={false} />);\n        break;\n      case 6:\n        list.push(<WhiteKey key={index} nowplay={false} />);\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          transform: \"scaleY(0.2)\",\n          position: \"fixed\" as \"fixed\",\n          bottom: -121,\n          zIndex: -1,\n        }}\n      >\n        {list}\n      </div>\n      {!inPiano && (\n        <div\n          style={{\n            position: \"fixed\" as \"fixed\",\n            bottom: 0,\n            marginLeft: 20,\n            marginBottom: 7,\n            paddingLeft: 20,\n            paddingRight: 20,\n            paddingTop: 10,\n            paddingBottom: 10,\n            backgroundColor: \"#FFFFFF\",\n            boxShadow: \"0 0 10px 10px white\",\n          }}\n        >\n          ピアノモードへ\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PianoMode;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport ConsoleMode, { ConsoleTab } from \"./consoleMode\";\nimport PianoMode, { PianoBase } from \"./pianoMode\";\n\nfunction App() {\n  const [showConsole, setShowConsole] = useState<boolean>(true);\n  const [finShowConsole, setFinShowConsole] = useState<boolean>(true);\n  const [showPiano, setShowPiano] = useState<boolean>(false);\n  const [finShowPiano, setFinShowPiano] = useState<boolean>(false);\n\n  function handleClick() {\n    if (showConsole) {\n      // コンソールを縮める\n      setShowConsole(false);\n      setFinShowConsole(false);\n      // ピアノを広げる\n      setShowPiano(true);\n      // コンソールを縮め切ったら消す\n      setTimeout(() => {\n        setFinShowPiano(true);\n      }, 2000);\n    } else {\n      // コンソールを広げる\n      setFinShowPiano(false);\n      setShowConsole(true);\n      // ピアノを縮める\n      setShowPiano(false);\n      // ピアノを縮め切ったら消す\n      setTimeout(() => {\n        setFinShowConsole(true);\n      }, 2000);\n    }\n  }\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <Header />\n      {!finShowPiano && <ConsoleMode doRemove={!showConsole} />}\n      <ConsoleTab inConsole={finShowConsole} />\n      {!finShowConsole && <PianoMode doRemove={!showPiano} />}\n      <PianoBase inPiano={finShowPiano} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}