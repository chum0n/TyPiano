{"version":3,"sources":["util/playNote.tsx","util/toABC.tsx","consoleKeyEnter.tsx","common/keyCode.tsx","consoleMode.tsx","useReceiveKeyEnter.tsx","pianoMode.tsx","useWindowDimentions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["audio","play","node","sec","ended","pause","currentTime","Hz","bytes","Uint8Array","Math","floor","header","fp","length","parseInt","substr","octave","phase","t","sin","setLittleEndian","str","i","String","fromCharCode","Audio","btoa","p","data","playNote","noteName","counter","toABC","beforeNote","lengthCounter","afterNote","toLowerCase","repeat","toString","useConsoleKeyEnter","useState","noteStr","setNoteStr","setNoteABCStr","noteStrHist","setNoteStrHist","noteABCStrHist","setNoteABCStrHist","tmpNoteStr","tmpNoteABCStr","noteTypeArray","wait","Promise","resolve","reject","setTimeout","useEffect","setFromNone","event","a","keyCode","pointer","octaveCounter","oneNote","includes","prev","beep_time","document","addEventListener","removeEventListener","consoleColor","backgroundColor","color","height","paddingRight","paddingLeft","paddingTop","paddingBottom","overflowY","ConsoleBlock","command","abc","commandId","scoreId","abcjs","renderAbc","id","ConsoleMode","nowString","commandHist","ABCHist","list","push","style","useReceiveKeyEnter","receivedKey","setReceivedKey","isSharp","setSharp","note","setNote","setCounter","nowCounter","setNowCounter","keyStyles","width","border","keyStylesOn","blackKeyStyles","marginLeft","marginRight","zIndex","blackKeyStylesOn","WhiteKey","nowplay","BlackKey","PianoMode","noteList","setNoteList","keyNum","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","onResize","useWindowDimensions","tone","playStartIndex","playEndIndex","index","playable","addTone","prevNoteList","display","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc8b7e0a.chunk.js","sourcesContent":["import sleep from \"./sleep\";\n\n// 音を鳴らす関数\nconst bpm = 120\nconst duration = (60000 / bpm) / 2 * 20\n\nvar audio:any;\n\nfunction play(node:any,sec:any){\n    stop();\n    if(node>=96)return;\n\n    const Hz=11025;//サンプリングレート\n\n    //Waveデータ\n    var bytes=new Uint8Array(Math.floor(Hz*sec)+100);\n    //Waveヘッダー作成\n    var header=\"524946460000000057415645666D74201000000001000100112B0000112B0000010008006461746100000000\";\n    var fp = 0\n    while (fp < header.length/2){\n      bytes[fp]=parseInt(header.substr(fp*2,2),16);\n      fp += 1;\n    }\n\n    //音階(ドド#レ…シ)の周波数(1オクターブ下がると1/2倍)\n    var freqs=[4180, 4428, 4708, 4968, 5264, 5592, 5884, 6300, 6676, 6988, 7476, 7848];\n\n    //1サンプルあたりの位相計算\n    const octave = Math.floor(node/12); //オクターブ\n    const freq = freqs[node%12] / (1<<(7-octave)); //周波数\n    const phase = 6.28 / (Hz / freq);\n\n    //波形作成\n    for (let t = 0; t < Math.floor(Hz*sec); t++){\n        bytes[fp++] = Math.floor(Math.sin(phase*t)*127)+128;\n    }\n\n    //データ補正\n    setLittleEndian(bytes,4,fp-8);  //ファイルサイズ\n    setLittleEndian(bytes,24,Hz);   //サンプリングレート\n    setLittleEndian(bytes,40,fp-44);//波形サイズ\n\n    //BASE64変換してオーディオ作成\n    var str=\"\";\n    for (let i=0;i<fp;i++){str+=String.fromCharCode(bytes[i]);}\n    audio=new Audio(\"data:audio/wav;base64,\"+btoa(str));\n    audio.play();\n}\n\nfunction stop(){\n    if (audio&&!audio.ended){\n      audio.pause();audio.currentTime=0;\n    }\n}\nfunction setLittleEndian(bytes:any,p:any,data:any){\n    bytes[p] = (data & 0xFF);\n    bytes[p+1] = ((data >> 8) & 0xFF);\n    bytes[p+2] = ((data >> 16) & 0xFF);\n    bytes[p+3] = ((data >> 24) & 0xFF);\n}\n\n// どの音を鳴らすか\nfunction　playNote(noteName: string, counter: number, sec: number){\n    if (noteName === \"do\") {\n        play(48+counter*12, sec);\n    } else if (noteName == \"#do\") {\n        play(49+counter*12, sec);\n    } else if (noteName === \"re\") {\n        play(50+counter*12, sec);\n    } else if (noteName === \"#re\") {\n        play(51+counter*12, sec);\n    } else if (noteName === \"mi\") {\n        play(52+counter*12, sec);\n    } else if (noteName === \"fa\") {\n        play(53+counter*12, sec);\n    } else if (noteName === \"#fa\") {\n        play(54+counter*12, sec);\n    } else if (noteName === \"so\") {\n        play(55+counter*12, sec);\n    } else if (noteName === \"#so\") {\n        play(56+counter*12, sec);\n    } else if (noteName === \"ra\") {\n        play(57+counter*12, sec);\n    } else if (noteName === \"#ra\") {\n        play(58+counter*12, sec);\n    } else if (noteName === \"shi\") {\n        play(59+counter*12, sec);\n    }\n}\n\nexport default playNote;","// 音をアルファベットに直す関数\nfunction toABC(beforeNote: string,counter:number, lengthCounter:number) {\n  var afterNote = \"\";\n  if (beforeNote === \"do\") {\n    afterNote += \"C\";\n  } else if (beforeNote === \"#do\") {\n    afterNote += \"^C\"\n  } else if (beforeNote === \"re\") {\n    afterNote += \"D\";\n  } else if (beforeNote === \"#re\") {\n    afterNote += \"^D\";\n  } else if (beforeNote === \"mi\") {\n    afterNote += \"E\";\n  } else if (beforeNote === \"fa\") {\n    afterNote += \"F\";\n  } else if (beforeNote === \"#fa\") {\n    afterNote += \"^F\";\n  } else if (beforeNote === \"so\") {\n    afterNote += \"G\";\n  } else if (beforeNote === \"#so\") {\n    afterNote += \"^G\";\n  } else if (beforeNote === \"ra\") {\n    afterNote += \"A\";\n  } else if (beforeNote === \"#ra\") {\n    afterNote += \"^A\";\n  } else if (beforeNote === \"shi\") {\n    afterNote += \"B\";\n  } else if (beforeNote === \" \") {\n    afterNote += \"z\";\n  } else {\n    if (beforeNote[1] == \"/\") {\n\n    }\n  }\n  if (counter == 1){\n    afterNote = afterNote.toLowerCase();\n  } else if (counter > 1){\n    afterNote = afterNote.toLowerCase();\n    afterNote += \"\\'\".repeat(counter);\n  } else if (counter < 0){\n    afterNote += \",\".repeat(-counter);\n  } \n  if (lengthCounter > 0) {\n    afterNote += (2**lengthCounter).toString();\n  } else if (lengthCounter < 0) {\n    afterNote += \"1/\"+(2**lengthCounter).toString();\n  }\n\n    return afterNote\n}\n\nexport default toABC;","import React, { useState, useEffect } from \"react\";\nimport playNote from \"./util/playNote\";\nimport toABC from \"./util/toABC\";\nimport sleep from \"./util/sleep\";\nimport * as keyCodeList from \"./common/keyCode\";\n\nconst bpm = 64;\nconst duration = 60000 / bpm / 2;\n\nconst useConsoleKeyEnter = (): [string, string[], string[]] => {\n  // 今のドレミ\n  const [noteStr, setNoteStr] = useState<string>(\"\");\n  // 今のABC\n  const [noteABCStr, setNoteABCStr] = useState<string>(\"\");\n  // 今までのドレミを保持する配列\n  const [noteStrHist, setNoteStrHist] = useState<string[]>([]);\n  // 今までのABCを保持する配列\n  const [noteABCStrHist, setNoteABCStrHist] = useState<string[]>([]);\n\n  var tmpNoteStr = \"\";\n  var tmpNoteABCStr = \"\";\n  var noteTypeArray = [\"do\", \"re\", \"mi\", \"fa\", \"so\", \"ra\", \"shi\", \"#do\", \"#re\", \"#fa\", \"#so\", \"#ra\", \" \"];\n\n  const wait = (sec: any) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, sec * 1000);\n      //setTimeout(() => {reject(new Error(\"エラー！\"))}, sec*1000);\n    });\n  };\n\n  useEffect(() => {\n    async function setFromNone(event: { keyCode: number | Number }) {\n      const keyCode = event.keyCode;\n      if (keyCode === keyCodeList.enter_code) {\n        var pointer = 0;\n        var octaveCounter = 0;\n        var lengthCounter = 0;\n        while (pointer + 1 < tmpNoteStr.length) {\n          if (tmpNoteStr[pointer] === \",\") {\n            octaveCounter -= 1;\n            pointer += 1;\n            continue;\n          } else if (tmpNoteStr[pointer] === \".\") {\n            octaveCounter += 1;\n            pointer += 1;\n            continue;\n          } else if (tmpNoteStr[pointer] === \"+\") {\n            pointer += 1;\n            lengthCounter += 1;\n            continue;\n          } else if (tmpNoteStr[pointer] === \"-\") {\n            pointer += 1;\n            lengthCounter -= 1;\n            continue;\n          }\n          var oneNote = tmpNoteStr.substr(pointer, 2);\n          if (oneNote === \"sh\" || oneNote[0] === \"#\") {\n            oneNote += tmpNoteStr[pointer + 2];\n            pointer += 3;\n          } else if (oneNote[0] === \" \") {\n            pointer += 1;\n            oneNote = \" \"\n          } else {\n            pointer += 2;\n          }\n          if (noteTypeArray.includes(oneNote)) {\n            tmpNoteABCStr += toABC(oneNote, octaveCounter, lengthCounter);\n            octaveCounter = 0;\n            lengthCounter = 0;\n            // setNoteABCStr(tmpNoteABCStr)\n          } else {\n            pointer -= 1\n          }\n        }\n        // ドレミとABCを配列に入れる\n        setNoteStrHist((prev) => [...prev, tmpNoteStr]);\n        setNoteABCStrHist((prev) => [...prev, tmpNoteABCStr]);\n\n        setNoteStr(\"\");\n        setNoteABCStr(\"\");\n\n        // 音鳴らすための処理\n        pointer = 0;\n        octaveCounter = 0;\n        while (pointer + 1 < tmpNoteStr.length) {\n        　if (tmpNoteStr[pointer] === \",\") {\n            octaveCounter -= 1;\n            pointer += 1;\n            continue;\n        　} else if (tmpNoteStr[pointer] === \".\") {\n            octaveCounter += 1;\n            pointer += 1;\n            continue;\n        　} else if (tmpNoteStr[pointer] === \"+\") {\n            pointer += 1;\n            lengthCounter += 1;\n            continue;\n          } else if (tmpNoteStr[pointer] === \"-\") {\n            pointer += 1;\n            lengthCounter -= 1;\n            continue;\n          }\n          oneNote = tmpNoteStr.substr(pointer, 2);\n          if (oneNote === \"sh\" || oneNote[0] === \"#\") {\n              oneNote += tmpNoteStr[pointer + 2];\n              pointer += 3;\n          } else if (oneNote[0] === \" \") {\n              pointer += 1;\n              oneNote = \" \"\n            } else {\n              pointer += 2;\n          }\n          if (noteTypeArray.includes(oneNote)) {\n              if (oneNote === \" \") {\n                  await wait(60/bpm/2);\n              } else {\n                  var beep_time = 60/(bpm*4);\n                  if (lengthCounter > 0) {\n                    beep_time = beep_time * (2*lengthCounter);\n                  } else if (lengthCounter < 0) {\n                    beep_time = beep_time / (2*lengthCounter);\n                  }\n                  playNote(oneNote,octaveCounter,beep_time)\n                  octaveCounter = 0;\n                  lengthCounter = 0\n                  await wait(beep_time);\n              }\n          } else { // ミスタイプのとき\n              pointer -= 1\n          }\n        }\n        tmpNoteStr = \"\";\n        tmpNoteABCStr = \"\";\n      } else if (keyCode === keyCodeList.d_code) {\n        tmpNoteStr += \"d\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.r_code) {\n        tmpNoteStr += \"r\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.m_code) {\n        tmpNoteStr += \"m\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.f_code) {\n        tmpNoteStr += \"f\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.s_code) {\n        tmpNoteStr += \"s\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.h_code) {\n        tmpNoteStr += \"h\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.o_code) {\n        tmpNoteStr += \"o\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.e_code) {\n        tmpNoteStr += \"e\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.i_code) {\n        tmpNoteStr += \"i\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.a_code) {\n        tmpNoteStr += \"a\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.sharp_code) {\n        tmpNoteStr += \"#\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.upOctave_code) {\n        tmpNoteStr += \".\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.downOctave_code) {\n        tmpNoteStr += \",\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === keyCodeList.space_code) {\n        tmpNoteStr += \" \";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === 187) {\n        tmpNoteStr += \"+\";\n        setNoteStr(tmpNoteStr);\n      } else if (keyCode === 189) {\n        tmpNoteStr += \"-\";\n        setNoteStr(tmpNoteStr);\n      }　else {\n        // setReceivedKey(\"none\");\n      }\n    }\n\n    document.addEventListener(\"keydown\", setFromNone);\n    return () => {\n      document.removeEventListener(\"keydown\", setFromNone);\n    };\n  }, [noteStrHist, noteABCStrHist]);\n\n  return [noteStr, noteStrHist, noteABCStrHist];\n};\n\nexport default useConsoleKeyEnter;\n","export const d_code = 68;\nexport const o_code = 79;\nexport const e_code = 69;\nexport const r_code = 82;\nexport const m_code = 77;\nexport const i_code = 73;\nexport const f_code = 70;\nexport const a_code = 65;\nexport const s_code = 83;\nexport const h_code = 72;\nexport const enter_code = 13;\nexport const sharp_code = 51;\nexport const upOctave_code = 190;\nexport const downOctave_code = 188;\nexport const space_code = 32;","import React from \"react\";\nimport abcjs from \"abcjs\";\nimport useConsoleKeyEnter from \"./consoleKeyEnter\";\n\nconst consoleColor = {\n  backgroundColor: \"#041344\",\n  color: \"#FFFFFF\",\n  height: \"60vh\",\n  paddingRight: 20,\n  paddingLeft: 20,\n  paddingTop: 5,\n  paddingBottom: 5,\n  overflowY: \"scroll\" as \"scroll\",\n};\n\nconst ConsoleBlock: React.FC<{ command: string; abc: string; i: number }> = ({\n  command,\n  abc,\n  i,\n}) => {\n  const commandId = \"command\" + String(i);\n  const scoreId = \"score\" + String(i);\n\n  abcjs.renderAbc(scoreId, abc);\n\n  return (\n    <div>\n      <p key={commandId}>$ {command}</p>\n      <div id={scoreId} key={scoreId}></div>\n    </div>\n  );\n};\n\nconst ConsoleMode: React.FC = () => {\n  // [[\"doremi\", \"remifa\"], [\"CDE\", \"EFG\"], \"dor\"のイメージ\n  const [nowString, commandHist, ABCHist] = useConsoleKeyEnter();\n\n  // 画面に表示するもの\n  const list = [];\n\n  // 今までの履歴をデザインに変えている\n  for (let i = 0; i < ABCHist.length; i++) {\n    // ConsoleBlockは、$doremiと五線譜のブロック\n    // commandは$doremiに使う\n    // abcは五線譜に使う\n    // iはidとかなので気にしなくていい\n    list.push(\n      <ConsoleBlock\n        command={commandHist[i]}\n        abc={ABCHist[i]}\n        i={i}\n      ></ConsoleBlock>\n    );\n  }\n  // 履歴と、一番下に今のやつを表示\n  return (\n    <div>\n      <div style={consoleColor}>\n        {list}\n        <p id=\"command\">$ {nowString}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ConsoleMode;\n","import { useState, useEffect } from \"react\";\nimport playNote from \"./util/playNote\";\n\ntype nowGotted = \"d\" | \"r\" | \"m\" | \"f\" | \"s\" | \"sh\" | \"#d\" | \"#r\" | \"#f\" | \"#s\" | \"none\";\ntype note = \"do\" | \"re\" | \"mi\" | \"fa\" | \"so\" | \"ra\" | \"shi\" | \"#do\" | \"#re\" | \"#fa\" | \"#so\" | \"#ra\" | \"none\" ;\n\nconst useReceiveKeyEnter = (): [note,number] => {\n  const [receivedKey, setReceivedKey] = useState<nowGotted>(\"none\");\n  const [isSharp , setSharp] = useState(false);\n  const [note, setNote] = useState<note>(\"none\");\n  const [counter, setCounter] = useState<number>(0);\n  const [nowCounter, setNowCounter] = useState(0);\n  \n  const sharp = 51;\n  const downOctave = 188;\n  const upOctave = 190;\n  const d = 68;\n  const o = 79;\n  const r = 82;\n  const e = 69;\n  const m = 77;\n  const i = 73;\n  const f = 70;\n  const a = 65;\n  const s = 83;\n  const h = 72;\n\n  useEffect(() => {\n    function setFromNone(event: { keyCode: number | Number }) {\n      const keyCode = event.keyCode;\n      setNote(\"none\");\n      if (keyCode == sharp) {\n        setSharp(true);\n      } else if (keyCode == downOctave) {\n        setCounter(counter-1);\n      } else if (keyCode == upOctave) {\n        setCounter(counter+1)\n      } else if (keyCode === d) {\n        if (isSharp) {\n          setReceivedKey(\"#d\");\n        } else{\n          setReceivedKey(\"d\");\n        }\n      } else if (keyCode === r) {\n        if (isSharp) {\n          setReceivedKey(\"#r\");\n        } else{\n          setReceivedKey(\"r\");\n        }\n      } else if (keyCode === m) {\n        setReceivedKey(\"m\");\n      } else if (keyCode === f) {\n        if (isSharp){\n          setReceivedKey(\"#f\");\n        } else{\n          setReceivedKey(\"f\");\n        }\n      } else if (keyCode === s) {\n        if (isSharp) {\n          setReceivedKey(\"#s\");\n        } else{\n          setReceivedKey(\"s\");\n        }\n      } else if (keyCode === h && receivedKey === \"s\") {\n        setReceivedKey(\"sh\");\n      } else if (keyCode === o && receivedKey === \"d\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#do\");\n          setSharp(false);\n        } else{\n          setNote(\"do\");\n        }\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else if (keyCode === o && receivedKey === \"s\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#so\");\n          setSharp(false);\n        } else{\n          setNote(\"so\");\n        }\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else if (keyCode === e && receivedKey === \"r\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#re\");\n          setSharp(false);\n        } else{\n          setNote(\"re\");\n        }\n        playNote(note, nowCounter, 1)\n        setReceivedKey(\"none\");\n      } else if (keyCode === i && receivedKey === \"m\") {\n        setNowCounter(counter);\n        setCounter(0);\n        setSharp(false);\n        setNote(\"mi\");\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else if (keyCode === i && receivedKey === \"sh\") {\n        setNowCounter(counter);\n        setCounter(0);\n        setSharp(false);\n        setNote(\"shi\");\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else if (keyCode === a && receivedKey === \"f\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#fa\");\n          setSharp(false);\n        } else{\n          setNote(\"fa\");\n        }\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else if (keyCode === a && receivedKey === \"r\") {\n        setNowCounter(counter);\n        setCounter(0);\n        if (isSharp){\n          setNote(\"#ra\");\n          setSharp(false);\n        } else{\n          setNote(\"ra\");\n        }\n        playNote(note,nowCounter, 1);\n        setReceivedKey(\"none\");\n      } else {\n        setReceivedKey(\"none\");\n        setCounter(0);\n      }\n    }\n\n    document.addEventListener(\"keydown\", setFromNone);\n    return () => {\n      document.removeEventListener(\"keydown\", setFromNone);\n    };\n  }, [receivedKey]);\n  return [note, nowCounter];\n};\n\nexport default useReceiveKeyEnter;\n","import React, { useEffect, useState } from \"react\";\nimport useReceiveKeyEnter from \"./useReceiveKeyEnter\";\nimport { useWindowDimensions } from \"./useWindowDimentions\";\nimport abcjs from \"abcjs\";\nimport toABC from \"./util/toABC\";\n\nconst keyStyles = {\n  height: 300,\n  width: 64,\n  backgroundColor: \"#F5FCFF\",\n  border: \"1px solid black\",\n};\n\nconst keyStylesOn = {\n  ...keyStyles,\n  backgroundColor: \"#adefde\",\n};\n\nconst blackKeyStyles = {\n  height: 150,\n  width: 32,\n  backgroundColor: \"black\",\n  border: \"1px solid black\",\n  marginLeft: -16,\n  marginRight: -16,\n  zIndex: 1,\n};\n\nconst blackKeyStylesOn = {\n  ...blackKeyStyles,\n  backgroundColor: \"#aaabcb\",\n}\n\nconst WhiteKey: React.FC<{ nowplay: boolean }> = ({ nowplay }) => {\n  return <div style={nowplay ? keyStylesOn : keyStyles}></div>;\n};\n\nconst BlackKey: React.FC<{ nowplay: boolean }> = ({ nowplay }) => {\n  return <div style={nowplay ? blackKeyStylesOn : blackKeyStyles}></div>;\n};\n\nconst PianoMode: React.FC = () => {\n  const [noteList, setNoteList] = useState<string>(\"\");\n\n  const windowDimensions = useWindowDimensions();\n  const keyNum = windowDimensions.width / 64;\n  const [tone,counter] = useReceiveKeyEnter();\n\n  const list = [];\n\n  // どこから有効キーにするか\n  const playStartIndex = Math.floor(keyNum / 7 / 2) * 7;\n  // どこまで有効キーにするか\n  const playEndIndex = playStartIndex + 7;\n\n  //鍵盤作成\n  for (let index = 0; index < keyNum; index++) {\n    const playable = index >= playStartIndex && index < playEndIndex;\n    switch (index % 7) {\n      case 0:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"do\" : false} />\n        );\n        list.push(<BlackKey key={index + 0.5}　　nowplay={playable ? tone === \"#do\" : false} />);\n        break;\n      case 1:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"re\" : false} />\n        );\n        list.push(<BlackKey key={index + 0.5} nowplay={playable ? tone === \"#re\" : false}　/>);\n        break;\n      case 2:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"mi\" : false} />\n        );\n        break;\n      case 3:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"fa\" : false} />\n        );\n        list.push(<BlackKey key={index + 0.5} nowplay={playable ? tone === \"#fa\" : false} />);\n        break;\n      case 4:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"so\" : false} />\n        );\n        list.push(<BlackKey key={index + 0.5} nowplay={playable ? tone === \"#so\" : false} />);\n        break;\n      case 5:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"ra\" : false} />\n        );\n        list.push(<BlackKey key={index + 0.5} nowplay={playable ? tone === \"#ra\" : false} />);\n        break;\n      case 6:\n        list.push(\n          <WhiteKey key={index} nowplay={playable ? tone === \"shi\" : false} />\n        );\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    var addTone = toABC(tone, counter, 0);\n    \n    setNoteList((prevNoteList) => prevNoteList + addTone);\n  }, [tone]);\n  abcjs.renderAbc(\"abc\", noteList);\n\n  return (\n    <div>\n      <div id=\"abc\"></div>\n      <div style={{ display: \"flex\" }}>{list}</div>\n    </div>\n  );\n};\n\nexport default PianoMode;\n","import { useState, useEffect } from \"react\";\n\nexport const useWindowDimensions = () => {\n  const getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  };\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  useEffect(() => {\n    const onResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n  return windowDimensions;\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport ConsoleMode from \"./consoleMode\";\nimport PianoMode from \"./pianoMode\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ConsoleMode />\n      <PianoMode />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}